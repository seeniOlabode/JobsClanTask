{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nvar validationMessages = {\n  empty: \"This field is required\",\n  invalid: \"Invalid Input\"\n};\nfunction ValidateEmail(inputText) {\n  var mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (inputText === \"\") {\n    return {\n      pass: false,\n      message: validationMessages.empty\n    };\n  } else if (inputText.match(mailformat)) {\n    return {\n      pass: true,\n      message: validationMessages.invalid\n    };\n  } else {\n    return {\n      pass: false,\n      message: validationMessages.invalid\n    };\n  }\n}\nfunction ValidateName(inputText) {\n  if (inputText == \"\") {\n    return {\n      pass: false,\n      message: validationMessages.empty\n    };\n  } else if (inputText.length > 2) {\n    return {\n      pass: true,\n      message: \"\"\n    };\n  } else {\n    return {\n      pass: false,\n      message: validationMessages.invalid\n    };\n  }\n}\nfunction ValidatePhoneNumber(inputText) {\n  var phoneFormat = /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im;\n  return phoneFormat.test(inputText);\n}\nexport { ValidateEmail, ValidateName, ValidatePhoneNumber };","map":{"version":3,"names":["validationMessages","empty","invalid","ValidateEmail","inputText","mailformat","pass","message","match","ValidateName","length","ValidatePhoneNumber","phoneFormat","test"],"sources":["/Users/macbookpro/Desktop/multi-form-project/src/helpers/validation.js"],"sourcesContent":["const validationMessages = {\n  empty: \"This field is required\",\n  invalid: \"Invalid Input\",\n};\n\nfunction ValidateEmail(inputText) {\n  var mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (inputText === \"\") {\n    return {\n      pass: false,\n      message: validationMessages.empty,\n    };\n  } else if (inputText.match(mailformat)) {\n    return {\n      pass: true,\n      message: validationMessages.invalid,\n    };\n  } else {\n    return {\n      pass: false,\n      message: validationMessages.invalid,\n    };\n  }\n}\n\nfunction ValidateName(inputText) {\n  if (inputText == \"\") {\n    return {\n      pass: false,\n      message: validationMessages.empty,\n    };\n  } else if (inputText.length > 2) {\n    return {\n      pass: true,\n      message: \"\",\n    };\n  } else {\n    return {\n      pass: false,\n      message: validationMessages.invalid,\n    };\n  }\n}\n\nfunction ValidatePhoneNumber(inputText) {\n  var phoneFormat = /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im;\n\n  return phoneFormat.test(inputText);\n}\n\nexport { ValidateEmail, ValidateName, ValidatePhoneNumber };\n"],"mappings":";;;AAAA,IAAMA,kBAAkB,GAAG;EACzBC,KAAK,EAAE,wBAAwB;EAC/BC,OAAO,EAAE;AACX,CAAC;AAED,SAASC,aAAa,CAACC,SAAS,EAAE;EAChC,IAAIC,UAAU,GAAG,6CAA6C;EAC9D,IAAID,SAAS,KAAK,EAAE,EAAE;IACpB,OAAO;MACLE,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEP,kBAAkB,CAACC;IAC9B,CAAC;EACH,CAAC,MAAM,IAAIG,SAAS,CAACI,KAAK,CAACH,UAAU,CAAC,EAAE;IACtC,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAEP,kBAAkB,CAACE;IAC9B,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLI,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEP,kBAAkB,CAACE;IAC9B,CAAC;EACH;AACF;AAEA,SAASO,YAAY,CAACL,SAAS,EAAE;EAC/B,IAAIA,SAAS,IAAI,EAAE,EAAE;IACnB,OAAO;MACLE,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEP,kBAAkB,CAACC;IAC9B,CAAC;EACH,CAAC,MAAM,IAAIG,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;IAC/B,OAAO;MACLJ,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLD,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEP,kBAAkB,CAACE;IAC9B,CAAC;EACH;AACF;AAEA,SAASS,mBAAmB,CAACP,SAAS,EAAE;EACtC,IAAIQ,WAAW,GAAG,0DAA0D;EAE5E,OAAOA,WAAW,CAACC,IAAI,CAACT,SAAS,CAAC;AACpC;AAEA,SAASD,aAAa,EAAEM,YAAY,EAAEE,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}