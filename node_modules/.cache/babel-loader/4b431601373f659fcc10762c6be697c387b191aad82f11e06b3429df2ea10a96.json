{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-3f6d0e06\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"text-sm text-multi-denim\"\n};\nvar _hoisted_2 = [\"type\", \"placeholder\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": _normalizeClass([\"flex-col flex input-container\", {\n      error: !$options.validation.pass\n    }])\n  }, [_createElementVNode(\"label\", _hoisted_1, _toDisplayString($props.title), 1 /* TEXT */), _createElementVNode(\"input\", {\n    onInput: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('update:modelValue', $event.target.value);\n    }),\n    \"class\": \"mt-1\",\n    type: $props.type,\n    placeholder: $props.placeholder,\n    value: $props.modelValue\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), _withDirectives(_createElementVNode(\"span\", {\n    \"class\": \"error-message\"\n  }, _toDisplayString($options.validation.message), 513 /* TEXT, NEED_PATCH */), [[_vShow, !$options.validation.pass]])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;;;;EAKW,SAAM;AAA0B;;;uBAJzCA,oBAeM;IAdJ,SAAKC,iBAAC,+BAA+B;MAAAC,QACnBC,mBAAU,CAACC;IAAI;MAEjCC,oBAA2D,SAA3DC,UAA2D,mBAAhBC,YAAK,kBAChDF,oBAME;IALCG,OAAK;MAAA,OAAEC,UAAK,sBAAsBC,MAAM,CAACC,MAAM,CAACC,KAAK;IAAA;IACtD,SAAM,MAAM;IACXC,IAAI,EAAEN,WAAI;IACVO,WAAW,EAAEP,kBAAW;IACxBK,KAAK,EAAEL;wEAEVF,oBAES;IAFuB,SAAM;EAAe,oBACnDF,mBAAU,CAACY,OAAO,2CADLZ,mBAAU,CAACC,IAAI","names":["_createElementBlock","_normalizeClass","error","$options","pass","_createElementVNode","_hoisted_1","$props","onInput","_ctx","$event","target","value","type","placeholder","message"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/multi-form-project/src/components/shared/InputComponent.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex-col flex input-container\"\n    :class=\"{ error: !validation.pass }\"\n  >\n    <label class=\"text-sm text-multi-denim\">{{ title }}</label>\n    <input\n      @input=\"$emit('update:modelValue', $event.target.value)\"\n      class=\"mt-1\"\n      :type=\"type\"\n      :placeholder=\"placeholder\"\n      :value=\"modelValue\"\n    />\n    <span v-show=\"!validation.pass\" class=\"error-message\">{{\n      validation.message\n    }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"InputComponent\",\n  props: {\n    validationCallback: {\n      type: Function,\n      required: true,\n    },\n    modelValue: {\n      type: String,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    validation() {\n      return this.validationCallback(this.modelValue);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.input-container {\n  position: relative;\n}\n\ninput {\n  border: solid 1px #d6d9e6;\n  @apply rounded py-2 px-4 font-medium;\n}\n\ninput:focus {\n  outline: none;\n  @apply border-multi-purple;\n}\n\n.error input {\n  @apply border-multi-red-error;\n}\n\n.error .error-message {\n  position: absolute;\n  right: 0;\n  @apply text-multi-red-error text-xs;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}